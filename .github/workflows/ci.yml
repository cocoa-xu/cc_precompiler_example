name: precompile

on:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: "prod"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25.0.4"
          elixir-version: "1.13.4"

      - name: Install system dependecies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip \
            gcc g++ \
            gcc-i686-linux-gnu g++-i686-linux-gnu \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            gcc-riscv64-linux-gnu g++-riscv64-linux-gnu \
            gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu \
            gcc-s390x-linux-gnu g++-s390x-linux-gnu

      - name: Mix Test
        run: |
          mix deps.get
          MIX_ENV=test mix test

      - name: Create precompiled library
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/*.tar.gz

  macos:
    runs-on: macos-13
    env:
      MIX_ENV: "prod"
      OTP_VERSION: "26.2.1"
      ELIXIR_VERSION: "1.16.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OTP and Elixir
        run: |
          curl -fsSO https://elixir-lang.org/install.sh
          sh install.sh "elixir@${ELIXIR_VERSION}" "otp@${OTP_VERSION}"

      - name: Compile and Test
        run: |
          export OTP_MAIN_VER="${OTP_VERSION%%.*}"
          export PATH=$HOME/.elixir-install/installs/otp/${OTP_VERSION}/bin:$PATH
          export PATH=$HOME/.elixir-install/installs/elixir/${ELIXIR_VERSION}-otp-${OTP_MAIN_VER}/bin:$PATH

          mix local.hex --force
          mix local.rebar --force

          mix deps.get
          MIX_ENV=test mix test

      - name: Create precompiled library
        run: |
          export OTP_MAIN_VER="${OTP_VERSION%%.*}"
          export PATH=$HOME/.elixir-install/installs/otp/${OTP_VERSION}/bin:$PATH
          export PATH=$HOME/.elixir-install/installs/elixir/${ELIXIR_VERSION}-otp-${OTP_MAIN_VER}/bin:$PATH
          
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/*.tar.gz

  windows:
    runs-on: windows-latest
    env:
      MIX_ENV: "prod"
    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25.0.4"
          elixir-version: "1.13.4"

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Mix Test
        shell: bash
        run: |
          mix deps.get
          MIX_ENV=test mix test

      - name: Create precompiled library
        shell: bash
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/*.tar.gz
